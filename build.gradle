group 'com.agonyforge'
version '0.1.4-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'info.solidsoft.pitest'
apply plugin: 'org.owasp.dependencycheck'
apply plugin: 'org.kordamp.gradle.stats'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'io.codearte.nexus-staging'

sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
    ext {
        springBootVersion = '2.1.5.RELEASE'
    }

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath group: 'org.owasp', name: 'dependency-check-gradle', version: '5.0.0-M3.1'
        classpath group: 'org.kordamp.gradle', name: 'stats-gradle-plugin', version: '0.2.2'
        classpath group: 'info.solidsoft.gradle.pitest', name: 'gradle-pitest-plugin', version: '1.4.0'
        classpath group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: springBootVersion
        classpath group: 'io.codearte.gradle.nexus', name: 'gradle-nexus-staging-plugin', version: '0.21.0'
    }
}

configurations.compile {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'javax.inject', name: 'javax.inject', version: '1'
    compile group: 'javax.interceptor', name: 'javax.interceptor-api', version: '1.2.2'

    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.16'
    compile group: 'org.flywaydb', name: 'flyway-core', version: '5.2.4'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-freemarker'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-websocket'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jetty'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'

    compile group: 'org.springframework.session', name: 'spring-session-jdbc'

    // required for using ActiveMQ as a message broker
    compile group: 'io.projectreactor.netty', name: 'reactor-netty', version: '0.8.8.RELEASE'

    compile group: 'org.webjars', name: 'webjars-locator-core', version: '0.37'
    compile group: 'org.webjars', name: 'jquery', version: '3.4.1'
    compile group: 'org.webjars', name: 'popper.js', version: '1.15.0'
    compile group: 'org.webjars', name: 'bootstrap', version: '4.3.1'
    compile group: 'org.webjars', name: 'font-awesome', version: '5.8.2'

    compile group: 'commons-io', name: 'commons-io', version: '2.6'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.28.2'
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    }
}

jar {
    archiveBaseName = 'agony-forge-core'
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

pitest {
    excludedClasses = [
    ]
    excludedMethods = [
        'hashCode',
        'equals'
    ]
    coverageThreshold = 70
    mutationThreshold = 70
    timestampedReports = false
}

dependencyCheck {
    suppressionFile "codequality/cve-suppressions.xml"
}

check.dependsOn project.tasks.pitest, project.tasks.dependencyCheckAnalyze, project.tasks.stats

// ensure pitest runs after junit, because pitest requires all tests to have passed
project.tasks.pitest.mustRunAfter test

def isMavenDeployable = hasProperty('nexusUsername') && hasProperty('nexusPassword')
def isSignable = hasProperty('signingKey') && hasProperty('signingPassword')

if (isMavenDeployable && isSignable) {
    signing {
        useInMemoryPgpKeys(signingKey, signingPassword)
        sign configurations.archives
    }

    nexusStaging {
        stagingProfileId = "c4851bd400117e"
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment {
                    MavenDeployment deployment -> signing.signPom(deployment)
                }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                    authentication(userName: nexusUsername, password: nexusPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                    authentication(userName: nexusUsername, password: nexusPassword)
                }

                pom.project {
                    name "agony-forge-core"
                    description "A modern MUD development kit"
                    groupId "${project.group}"
                    packaging 'jar'
                    url "https://github.com/scionaltera/agony-forge-core"
                    version "${project.version}"
                    inceptionYear "2019"

                    developers {
                        developer {
                            id 'scionaltera'
                            name 'Peter Keeler'
                            email 'peter@agonyforge.com'
                        }
                    }

                    licenses {
                        license {
                            name 'The MIT License'
                            url 'https://opensource.org/licenses/MIT'
                            distribution 'repo'
                        }
                    }

                    scm {
                        url 'https://github.com/scionaltera/agony-forge-core'
                        connection 'scm:https://github.com/scionaltera/agony-forge-core.git'
                        developerConnection 'scm:https://github.com/scionaltera/agony-forge-core.git'
                    }
                }
            }
        }
    }
}
